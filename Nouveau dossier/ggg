from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.lang import Builder
from kivymd.app import MDApp

# Classe pour gérer l'état de connexion de l'utilisateur
class AuthManager(ScreenManager):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.is_logged_in = False  # Par défaut, l'utilisateur n'est pas connecté

    def check_authentication(self):
        """
        Vérifie si l'utilisateur est connecté et affiche l'écran approprié.
        """
        if self.is_logged_in:
            self.current = "profile_screen"
        else:
            self.current = "main_app"

# Classe représentant l'écran de connexion
class MainAppScreen(Screen):
    def login(self):
        """
        Simule une tentative de connexion. Si réussie, met à jour l'état de connexion.
        """
        username = self.ids.user.text
        password = self.ids.password.text

        # Exemple de vérification (remplacez par votre logique réelle)
        if username == "test" and password == "1234":
            self.manager.is_logged_in = True
            self.manager.check_authentication()
        else:
            self.ids.message_label.text = "Nom d'utilisateur ou mot de passe incorrect !"

# Classe représentant l'écran de profil
class ProfileScreen(Screen):
    def logout(self):
        """
        Déconnecte l'utilisateur et revient à l'écran principal.
        """
        self.manager.is_logged_in = False
        self.manager.check_authentication()

KV = """
<AuthManager>:
    MainAppScreen:
        name: "main_app"
    ProfileScreen:
        name: "profile_screen"

<MainAppScreen>:
    BoxLayout:
        orientation: 'vertical'
        spacing: dp(20)
        padding: dp(20)

        MDTextFieldRound:
            id: user
            hint_text: "Nom d'utilisateur"
            icon_right: "account"
            size_hint_x: None
            width: dp(200)
            pos_hint: {"center_x": 0.5}

        MDTextFieldRound:
            id: password
            hint_text: "Mot de passe"
            icon_right: "eye-off"
            size_hint_x: None
            width: dp(200)
            password: True
            pos_hint: {"center_x": 0.5}

        MDRoundFlatButton:
            text: "Se connecter"
            pos_hint: {"center_x": 0.5}
            on_release: root.login()

        MDLabel:
            id: message_label
            text: ""
            theme_text_color: "Error"
            halign: "center"

<ProfileScreen>:
    BoxLayout:
        orientation: 'vertical'
        spacing: dp(20)
        padding: dp(20)

        MDLabel:
            text: "Bienvenue dans votre profil !"
            halign: "center"

        MDRoundFlatButton:
            text: "Se déconnecter"
            pos_hint: {"center_x": 0.5}
            on_release: root.logout()
"""

class MyApp(MDApp):
    def build(self):
        Builder.load_string(KV)
        auth_manager = AuthManager()
        auth_manager.check_authentication()
        return auth_manager

if __name__ == "__main__":
    MyApp().run()
